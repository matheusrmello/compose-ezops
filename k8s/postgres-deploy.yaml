apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresdb
  template:
    metadata:
      labels:
        app: postgresdb
    spec:
      containers:
      - name: postgresdb
        image: postgres:11
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "800Mi"
            cpu: "800m"
          limits:
            memory: "1000Mi"
            cpu: "1000m"
        envFrom:
          - configMapRef:
              name: postgres-secret
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresdata
          - mountPath: /docker-entrypoint-initdb.d
            name: init-sql
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
        - name: init-sql
          configMap:
            name: postgres-init-sql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  labels:
    app: postgresdb
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  labels:
    type: local
    app: postgresdb
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/postgresql
---
apiVersion: v1
kind: Service
metadata:
  name: postgresdb-service
  labels:
    app: postgresdb
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgresdb